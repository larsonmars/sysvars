; $VER: SYSVARS ECHO Test Script 0.15
c/ksge36
IF WARN
  Echo "Setting things up for KS 1.x..."
  IF EXISTS C:RESIDENT ; Run under Workbench
    ECHO "Making commands resident to speed things up..."
    FailAt 25
    Resident >NIL: Resident C:Resident pure
    Resident >NIL: Echo  C:ECHO  pure
    Resident >NIL: If    C:IF    pure
    Resident >NIL: Else  C:ELSE  pure
    Resident >NIL: Endif C:ENDIF pure
    Resident >NIL: probevar c/probevar pure
    FailAt 10
  ELSE ; Cannot use Resident
    Echo "Copying commands to RAM Disk to speed things up..."
    Copy >NIL: c RAM:c
    RAM:c/Assign C: RAM:c
  ENDIF

  Assign >NIL: ENV: EXISTS
  IF WARN
    Makedir RAM:Env
    Assign ENV: RAM:ENV
  ENDIF
  SetEnv KSGE36 0
  FF >NIL:
  Echo "done."
ELSE
  Set KSGE36 1
  Resident >NIL: probevar c/probevar pure
ENDIF

LAB Test

ECHO "*E[0;0H*E[J"
ECHO "             ___ _    __ _    _     ____  ____"
ECHO "            / __| |  / _| |  | |/\ |  _ \/ ___)"
ECHO "           | (__| | | (_| |  | /  \| | \| (__ "
ECHO "            \__  \ \/\__| |  |/ /\ | |_/ \__ \"
ECHO "               ) )\ /   )\ \// ____|  _ (   ) )"
ECHO "            __/ // / __/ /\ / /    | | \ \_/ /"
ECHO "           (___//_/ |___/  V_/     |_|  (___/ "
ECHO ""

sysvars

ECHO "-------------------------------------------------------------"
ECHO "                        Results:"
ECHO "-------------------------------------------------------------"
ECHO ""

ECHO "Operating System: " NOLINE
probevar KickVer
IF NOT WARN
  IF $KickVer GE 36
    IF $KickVer GE 37
      IF $KickVer GE 39
        IF $KickVer GE 40
          IF $KickVer GE 44
            IF $KickVer GE 45
              IF $KickVer GE 46
                IF $KickVer GE 47
                  IF $KickVer GE 48
                    IF $KickVer GE 49
                      IF $KickVer GE 50
                        ECHO "Amiga OS 4+ or MorphOS ($KickVer.$KickRev)"
                      ELSE
                        ECHO "Amiga OS 3.4(?) ($KickVer.$KickRev)"
                      ENDIF
                    ELSE
                      ECHO "Amiga OS 3.3(?) ($KickVer.$KickRev)"
                    ENDIF
                  ELSE
                    ECHO "Amiga OS 3.2 ($KickVer.$KickRev)"
                  ENDIF
                ELSE
                  IF $KickRev EQ 143
                    ECHO "Amiga OS 3.1.4 ($KickVer.$KickRev)"
                  ELSE
                    ECHO "AROS ($KickVer.$KickRev)"
                  ENDIF
                ENDIF
              ELSE
                ECHO "Amiga OS 3.9 ($KickVer.$KickRev)"
              ENDIF
            ELSE
              ECHO "Amiga OS 3.5 ($KickVer.$KickRev)"
            ENDIF
          ELSE
            ECHO "Amiga OS 3.1 ($KickVer.$KickRev)"
          ENDIF
        ELSE
          ECHO "Amiga OS 3.0 ($KickVer.$KickRev)"
        ENDIF
      ELSE
        IF $KickRev GE 71
          ECHO "Amiga OS 2.05 ($KickVer.$KickRev)"
        ELSE
          ECHO "Amiga OS 2.04 ($KickVer.$KickRev)"
        ENDIF
      ENDIF
    ELSE
      ECHO "Amiga OS 2.0 ($KickVer.$KickRev)"
    ENDIF
  ELSE
    IF $KickVer GE 34
      ECHO "Amiga OS 1.3"
    ELSE
      IF $KickVer EQ 33
        ECHO "Amiga OS 1.2"
      ELSE
        ECHO "Kickstart below 1.2 (unsupported)"
      ENDIF
    ENDIF  
  ENDIF
ELSE
  ECHO "<variable for Kickstart version not set>"
ENDIF

ECHO "CPU: " NOLINE
probevar CPU
IF NOT WARN
  IF $CPU EQ 68000
    ECHO "68000"
  ELSE
    IF $CPU EQ 68010
      ECHO "68010"
    ELSE
      IF $CPU EQ 68020
        ECHO "68020" NOLINE
      ELSE
        IF $CPU EQ 68030
          ECHO "68030" NOLINE
        ELSE
          IF $CPU EQ 68040
            ECHO "68040" NOLINE
          ELSE
            IF $CPU EQ 68060
              ECHO "68060" NOLINE
            ELSE  
              IF $CPU EQ 68080
                ECHO "68080" NOLINE
              ELSE
                IF $KSGE36 EQ 1
                  ECHO "$CPU" NOLINE
                ELSE
                  ECHO "other" NOLINE
                ENDIF
              ENDIF
            ENDIF
          ENDIF
        ENDIF
      ENDIF
      probevar FPU
      IF NOT WARN
        IF "$FPU" EQ ""
          ECHO " (no FPU)"
        ELSE
          ECHO ", FPU: " NOLINE
          IF $FPU EQ "internal"
            ECHO yes
          ELSE
            IF $FPU EQ "68881"
              ECHO "68881"
            ELSE
              IF $FPU EQ "68882"
                ECHO "68882"
              ELSE
                IF $KSGE36 EQ 1
                  ECHO $FPU
                ELSE
                  ECHO "Unknown"
                ENDIF
              ENDIF
            ENDIF
          ENDIF
        ENDIF
      ELSE
        ECHO "<variable for FPU not set>"
      ENDIF
    ENDIF
  ENDIF
ELSE
  ECHO "<variable for CPU not set>"
ENDIF

ECHO "Chipset: " NOLINE
probevar Chipset
IF NOT WARN
  IF $Chipset EQ SAGA
    ECHO "SAGA" NOLINE
  ELSE
    IF $Chipset EQ AGA
      ECHO "AGA" NOLINE
    ELSE
      IF $Chipset EQ ECS
        ECHO "ECS" NOLINE
      ELSE
        IF $Chipset EQ OCS
          ECHO "OCS" NOLINE
        ELSE
          IF $KSGE36 EQ 1
            ECHO $Chipset
          ELSE
            ECHO "other" NOLINE
          ENDIF
        ENDIF
      ENDIF
    ENDIF
  ENDIF
ELSE
  ECHO "<variable for Chipset not set>" NOLINE
ENDIF

probevar VFreq
IF NOT WARN
  IF $VFreq EQ 50
    ECHO ", running in PAL (50Hz)"
  ELSE
    IF $VFreq EQ 60
      ECHO ", running in NTSC (60Hz)"
    ELSE
      IF $KSGE36 EQ 1
        ECHO ", running at ${VFreq}Hz"
      ELSE
        ECHO ", running at neither 50Hz nor 60Hz"
      ENDIF
    ENDIF
  ENDIF
ELSE
  ECHO ", <variable vor vertical frequency not set>"
ENDIF

ECHO "RAM: " NOLINE

probevar TotalChipRam
IF NOT WARN
  IF $TotalChipRam EQ 256
    ECHO "256K" NOLINE
  ELSE
    IF $TotalChipRam EQ 512
      ECHO "512K" NOLINE
    ELSE
      IF $TotalChipRam EQ 1024
        ECHO "1MB" NOLINE
      ELSE
        IF $TotalChipRam EQ 2048
          ECHO "2MB" NOLINE
        ELSE
          IF $TotalChipRam EQ 4096
            ECHO "4MB" NOLINE
          ELSE
            IF $TotalChipRam EQ 8192
              ECHO "8MB" NOLINE
            ELSE
              IF $KSGE36 EQ 1
                ECHO "${TotalChipRam}K" NOLINE
              ELSE
                IF $TotalChipRam GT 8192
                  ECHO "> 8MB" NOLINE
                ELSE
                  ECHO "???" NOLINE
                ENDIF
              ENDIF
            ENDIF
          ENDIF
        ENDIF
      ENDIF
    ENDIF
  ENDIF
  ECHO " Chip" NOLINE
ELSE
  ECHO "<variable for Chip RAM not set>" NOLINE
ENDIF
probevar TotalSlowRam
IF NOT WARN
  ECHO ", " NOLINE
  IF $TotalSlowRam EQ 256
    ECHO "256K" NOLINE
  ELSE
    IF $TotalSlowRam EQ 512
      ECHO "512K" NOLINE
    ELSE
      IF $TotalSlowRam EQ 1024
        ECHO "1MB" NOLINE
      ELSE
        IF $TotalSlowRam EQ 1536
          ECHO "1.5MB" NOLINE
        ELSE
          IF $TotalSlowRam EQ 1792
            ECHO "1.8MB" NOLINE
          ELSE
            IF $KSGE36 EQ 1
              ECHO "${TotalSlowRam}K" NOLINE
            ELSE
              ECHO "???" NOLINE
            ENDIF
          ENDIF
        ENDIF
      ENDIF
    ENDIF
  ENDIF
  ECHO " Slow" NOLINE
ENDIF

IF $KSGE36 EQ 0
  SETENV OfferFastMemFirstTest 0
ENDIF

ECHO ", " NOLINE
probevar TotalFastRam
IF NOT WARN
  IF $TotalFastRam EQ 0
    ECHO "no" NOLINE
  ELSE
    IF $TotalFastRam EQ 64
      ECHO "64K" NOLINE
    ELSE
      IF $TotalFastRam EQ 128
        ECHO "128K" NOLINE
      ELSE
        IF $TotalFastRam EQ 256
          ECHO "256K" NOLINE
        ELSE
          IF $TotalFastRam EQ 512
            ECHO "512K" NOLINE
          ELSE
            IF $TotalFastRam EQ 1024
              ECHO "1MB" NOLINE
            ELSE
              IF $TotalFastRam EQ 2048
                ECHO "2MB" NOLINE
              ELSE
                IF $TotalFastRam EQ 4096
                  ECHO "4MB" NOLINE
                ELSE
                  IF $TotalFastRam EQ 8192
                    ECHO "8MB" NOLINE
                  ELSE
                    IF $KSGE36 EQ 1
                      ECHO "${TotalFastRam}K" NOLINE
                    ELSE
                      IF $TotalFastRam GT 8192
                        ECHO "Over 8MB" NOLINE
                      ELSE
                        ECHO "???" NOLINE
                      ENDIF
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
        ENDIF
      ENDIF
    ENDIF
  ENDIF
  ECHO " Fast" NOLINE
ELSE
  ECHO "<variable for Fast RAM not set>" NOLINE
ENDIF

probevar TotalRam
IF NOT WARN
  ECHO ", Total: " NOLINE
  IF $KSGE36 EQ 1
    ECHO "${TotalRam}K"
  ELSE
    EVAL <ENV:TotalRam >NIL: LFORMAT=%NK TO RAM:mem ?
    TYPE RAM:mem
  ENDIF
ELSE
  ECHO "<variable for total RAM not set>" NOLINE
ENDIF

probevar VampireType
IF NOT WARN
  ECHO "Vampire: " NOLINE
  IF $VampireType EQ V2_600
    ECHO "V2 600" NOLINE
  ELSE
    IF $VampireType EQ V2_500
      ECHO "V2 500" NOLINE
    ELSE
      IF $VampireType EQ V4_500/1000/2000
        ECHO "V4 Firebird/Phoenix/Salamander" NOLINE
      ELSE
        IF $VampireType EQ V4_1200
          ECHO "V4 Icedrake" NOLINE
        ELSE
          IF $VampireType EQ V4_Standalone
            ECHO "V4 Standalone" NOLINE
          ELSE
            IF $VampireType EQ V2_1200
              ECHO "V2 1200" NOLINE
            ELSE
              IF $VampireType EQ V4_600
                ECHO "V4 Manticore" NOLINE
              ELSE
                IF $KSGE36
                  ECHO "type $VampireType" NOLINE
                ELSE
                  ECHO "unknown" NOLINE
                ENDIF
              ENDIF
            ENDIF
          ENDIF
        ENDIF
      ENDIF
    ENDIF
  ENDIF
  IF $KSGE36 EQ 1
    probevar VampireClockMult
    IF NOT WARN
      ECHO ", clocked at: ${VampireClockMult}x" NOLINE
    ENDIF
    probevar VampireCoreRev
    IF NOT WARN
      ECHO ", Core Rev.: $VampireCoreRev" NOLINE
    ENDIF
  ENDIF
  ECHO ""
ENDIF


probevar BSDSockLib
IF NOT WARN
  IF $KSGE36 EQ 1
    ECHO "Detected bsdsocket.library V$BSDSockLibVer.$BSDSockLibRev named *"$BSDSockLib*""
  ELSE
    ECHO "Detected bsdsocket.library"
  ENDIF
ENDIF

probevar UAEMajor
IF NOT WARN
  IF $KSGE36 EQ 1
    ECHO "UAE V$UAEMajor.$UAEMinor.$UAERev"
  ELSE
    ECHO "UAE detected"
  ENDIF
ENDIF

IF NOT $TotalFastRam EQ 0
  probevar SlowRamFirst
  IF NOT WARN
    ECHO "WARNING: SlowMem is first in memory list!"
    ECHO "Consider running FastMemFirst for improved performance!"
    ASK "Do you want to execute FastMemFirst and repeat the test?"
    IF WARN
      FastMemFirst
      SKIP Test BACK
    ENDIF
  ENDIF
ENDIF